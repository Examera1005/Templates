# Grafana Provisioning - Datasources
# Automatic configuration of data sources

apiVersion: 1

datasources:
  # Prometheus - Main metrics
  - name: Prometheus
    type: prometheus
    access: proxy
    orgId: 1
    uid: prometheus
    url: http://prometheus:9090
    isDefault: true
    version: 1
    editable: false
    jsonData:
      httpMethod: POST
      manageAlerts: true
      alertmanagerUid: alertmanager
      prometheusType: Prometheus
      prometheusVersion: 2.40.0
      cacheLevel: 'High'
      disableRecordingRules: false
      incrementalQueryOverlapWindow: 10m
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: jaeger

  # Loki - Logs
  - name: Loki
    type: loki
    access: proxy
    orgId: 1
    uid: loki
    url: http://loki:3100
    version: 1
    editable: false
    jsonData:
      maxLines: 1000
      derivedFields:
        - datasourceUid: jaeger
          matcherRegex: "traceID=(\\w+)"
          name: TraceID
          url: "$${__value.raw}"

  # Jaeger - Distributed tracing
  - name: Jaeger
    type: jaeger
    access: proxy
    orgId: 1
    uid: jaeger
    url: http://jaeger-query:16686
    version: 1
    editable: false
    jsonData:
      tracesToLogs:
        datasourceUid: loki
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [{ key: 'service.name', value: 'service' }]
        mapTagNamesEnabled: false
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: false
        filterBySpanID: false

  # Elasticsearch - Application logs
  - name: Elasticsearch
    type: elasticsearch
    access: proxy
    orgId: 1
    uid: elasticsearch
    url: http://elasticsearch:9200
    database: "logs-*"
    version: 1
    editable: false
    jsonData:
      index: logs-*
      timeField: "@timestamp"
      esVersion: "8.0.0"
      includeFrozen: false
      logMessageField: message
      logLevelField: level
      maxConcurrentShardRequests: 5

  # InfluxDB - Custom metrics
  - name: InfluxDB
    type: influxdb
    access: proxy
    orgId: 1
    uid: influxdb
    url: http://influxdb:8086
    database: metrics
    user: $INFLUXDB_USER
    secureJsonData:
      password: $INFLUXDB_PASSWORD
    version: 1
    editable: false
    jsonData:
      httpMode: GET
      keepCookies: []

  # CloudWatch - AWS metrics (if using AWS)
  - name: CloudWatch
    type: cloudwatch
    access: proxy
    orgId: 1
    uid: cloudwatch
    url: 
    version: 1
    editable: false
    jsonData:
      authType: keys
      defaultRegion: us-east-1
      customMetricsNamespaces: 'AWS/ApplicationELB,AWS/ELB,AWS/Lambda,Custom'
      assumeRoleArn: arn:aws:iam::123456789012:role/GrafanaCloudWatchRole
    secureJsonData:
      accessKey: $AWS_ACCESS_KEY_ID
      secretKey: $AWS_SECRET_ACCESS_KEY

  # Azure Monitor - Azure metrics (if using Azure)
  - name: Azure Monitor
    type: grafana-azure-monitor-datasource
    access: proxy
    orgId: 1
    uid: azure-monitor
    version: 1
    editable: false
    jsonData:
      subscriptionId: $AZURE_SUBSCRIPTION_ID
      tenantId: $AZURE_TENANT_ID
      clientId: $AZURE_CLIENT_ID
      cloudName: azuremonitor
    secureJsonData:
      clientSecret: $AZURE_CLIENT_SECRET

  # Google Cloud Monitoring - GCP metrics (if using GCP)
  - name: Google Cloud Monitoring
    type: stackdriver
    access: proxy
    orgId: 1
    uid: stackdriver
    version: 1
    editable: false
    jsonData:
      authenticationType: jwt
      projectName: $GCP_PROJECT_ID
      clientEmail: $GCP_CLIENT_EMAIL
      defaultProject: $GCP_PROJECT_ID
      tokenUri: https://oauth2.googleapis.com/token
    secureJsonData:
      privateKey: $GCP_PRIVATE_KEY

  # TestData - For testing dashboards
  - name: TestData
    type: testdata
    access: proxy
    orgId: 1
    uid: testdata
    version: 1
    editable: true
    isDefault: false